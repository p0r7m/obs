## Sumo Logic Kubernetes Collection configuration file
## All the comments start with two or more # characters

nameOverride: ""

sumologic:
  ### Setup

  ## If enabled, a pre-install hook will create Collector and Sources in Sumo Logic
  setupEnabled: true

  ## If enabled, a pre-delete hook will destroy Collector in Sumo Logic
  cleanupEnabled: false

  ## If enabled, accessId and accessKey will be sourced from Secret Name given
  ## Be sure to include at least the following env variables in your secret
  ## (1) SUMOLOGIC_ACCESSID, (2) SUMOLOGIC_ACCESSKEY
  # envFromSecret: sumo-api-secret

  ## Sumo access ID
  # accessId: ""

  ## Sumo access key
  # accessKey: ""

  ## Sumo API endpoint; Leave blank for automatic endpoint discovery and redirection
  ## ref: https://help.sumologic.com/APIs/General-API-Information/Sumo-Logic-Endpoints-and-Firewall-Security
  endpoint: ""

  ## proxy urls
  httpProxy: ""
  httpsProxy: ""
  ## Exclude Kubernetes internal traffic from proxy
  noProxy: kubernetes.default.svc

  ## Collector name
  # collectorName: ""

  ## Cluster name: Note spaces are not allowed and will be replaced with dashes.
  clusterName: "kubernetes"

  ## Configuration of Kubernetes for Terraform client
  ## https://www.terraform.io/docs/providers/kubernetes/index.html#argument-reference
  ## All double quotes should be escaped here regarding Terraform syntax
  cluster:
    host: "https://kubernetes.default.svc"
    # username:
    # password:
    # insecure:
    # client_certificate:
    # client_key:
    cluster_ca_certificate: "${file(\"/var/run/secrets/kubernetes.io/serviceaccount/ca.crt\")}"
    # config_path:
    # config_context:
    # config_context_auth_info:
    # config_context_cluster:
    token: "${file(\"/var/run/secrets/kubernetes.io/serviceaccount/token\")}"
    load_config_file: false
    # exec:
    #   api_version:
    #   command:
    #   args: []
    #   env: {}

  ## If you set it to false, it would set EXCLUDE_NAMESPACE=<release-namespace>
  ## and not add the fluentD/fluent-bit logs and Prometheus remotestorage metrics.
  collectionMonitoring: true

  ## Optionally specify an array of pullSecrets.
  ## They will be added to serviceaccount that is used for Sumo Logic's jobs,
  ## deployments and statefulsets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - name: myRegistryKeySecretName

  ## Add custom labels to the following sumologic resources(fluentd sts, setup job deployment)
  podLabels: {}

  ## Add custom annotations to the following sumologic resources(fluentd sts, setup job deployment)
  podAnnotations: {}

  setup:
    ## uncomment to force collection installation (disables k8s version verification)
    # force: true
    job:
      image:
        repository: public.ecr.aws/sumologic/kubernetes-setup
        tag: 3.0.0
        pullPolicy: IfNotPresent
      resources:
        limits:
          memory: 256Mi
          cpu: 2000m
        requests:
          memory: 64Mi
          cpu: 200m
      nodeSelector: {}
      ## Add custom labels only to setup job pod
      podLabels: {}
      ## Add custom annotations only to setup job pod
      podAnnotations: {}

    ## uncomment for the debug mode (disables the automatic run of the setup.sh script)
    # debug: true

  collector:
    ## Configuration of additional collector fields
    ## https://help.sumologic.com/Manage/Fields#http-source-fields
    fields: {}

    ## Configuration of http sources
    ## See docs/Terraform.md for more information
    ## name: source name visible in sumologic platform
    ## config-name: This is mostly for backward compatibility
    sources:
      metrics:
        default:
          name: (default-metrics)
          config-name: endpoint-metrics
        apiserver:
          name: apiserver-metrics
          config-name: endpoint-metrics-apiserver
        controller:
          name: kube-controller-manager-metrics
          config-name: endpoint-metrics-kube-controller-manager
        scheduler:
          name: kube-scheduler-metrics
          config-name: endpoint-metrics-kube-scheduler
        state:
          name: kube-state-metrics
          config-name: endpoint-metrics-kube-state
        kubelet:
          name: kubelet-metrics
          config-name: endpoint-metrics-kubelet
        node:
          name: node-exporter-metrics
          config-name: endpoint-metrics-node-exporter
        control-plane:
          name: control-plane-metrics
      logs:
        default:
          name: logs
          config-name: endpoint-logs

  ### Logs configuration
  ## Set the enabled flag to false for disabling logs ingestion altogether.
  logs:
    enabled: true

    ## Fields to be created at Sumo Logic to ensure logs are tagged with
    ## relevant metadata.
    ## https://help.sumologic.com/Manage/Fields#Manage_fields
    fields:
      - cluster
      - container
      - deployment
      - host
      - namespace
      - node
      - pod
      - service

  ### Metrics configuration
  ## Set the enabled flag to false for disabling metrics ingestion altogether.
  metrics:
    enabled: true

fluentd:
  image:
    repository: public.ecr.aws/sumologic/kubernetes-fluentd
    tag: 1.12.2-sumo-0
    pullPolicy: IfNotPresent

  ## Specifies whether a PodSecurityPolicy should be created
  podSecurityPolicy:
    create: false
  additionalPlugins: []

  ## Sets the fluentd log level. The default log level, if not specified, is info.
  ## Sumo will only ingest the error log level and some specific warnings, the info logs can be seen in kubectl logs.
  ## ref: https://docs.fluentd.org/deployment/logging
  logLevel: "info"
  ## to ingest all fluentd logs, turn the logLevelFilter to false
  logLevelFilter: true

  ## Verify SumoLogic HTTPS certificates
  verifySsl: true
  ## Proxy URI for sumologic output plugin
  proxyUri: ""

  ## Enable and set compression encoding for fluentd output plugin
  compression:
    enabled: true
    encoding: gzip

  securityContext:
    ## The group ID of all processes in the statefulset containers. By default this needs to be fluent(999).
    fsGroup: 999

  ## Add custom labels to all fluentd sts pods(logs, metrics)
  podLabels: {}

  ## Add custom annotations to all fluentd sts pods(logs, metrics)
  podAnnotations: {}

  ## Add custom labels to all fluentd svc (logs, metrics)
  serviceLabels: {}

  ## Persist data to a persistent volume; When enabled, fluentd uses the file buffer instead of memory buffer.
  persistence:
    ## After changing this value please follow steps described in:
    ## https://github.com/SumoLogic/sumologic-kubernetes-collection/blob/main/deploy/docs/FluentdPersistence.md
    enabled: true

    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, Azure & OpenStack)
    ##
    # storageClass: "-"
    # annotations: {}
    accessMode: ReadWriteOnce
    size: 10Gi

  buffer:
    ## Option to specify the Fluentd buffer as file/memory.
    ## If fluentd.persistence.enabled is true, this will be ignored.
    type: "memory"

    ## How frequently to push logs to SumoLogic
    ## ref: https://github.com/SumoLogic/fluentd-kubernetes-sumologic#options
    flushInterval: "5s"
    ## Increase number of http threads to Sumo. May be required in heavy logging/high DPM clusters
    numThreads: 8
    chunkLimitSize: "1m"
    queueChunkLimitSize: 128
    totalLimitSize: "128m"
    retryMaxInterval: "10m"
    retryForever: true
    compress: gzip

    ## File paths to buffer to, if Fluentd buffer type is specified as file above.
    ## Each sumologic output plugin buffers to its own unique file.
    filePaths:
      logs:
        containers: /fluentd/buffer/logs.containers
        kubelet: /fluentd/buffer/logs.kubelet
        systemd: /fluentd/buffer/logs.systemd
        default: /fluentd/buffer/logs.default
      metrics:
        apiserver: /fluentd/buffer/metrics.apiserver
        kubelet: /fluentd/buffer/metrics.kubelet
        container: /fluentd/buffer/metrics.container
        controller: /fluentd/buffer/metrics.controller
        scheduler: /fluentd/buffer/metrics.scheduler
        state: /fluentd/buffer/metrics.state
        node: /fluentd/buffer/metrics.node
        control-plane: /fluentd/buffer/metrics.control_plane
        default: /fluentd/buffer/metrics.default

    ## Additional config for buffer settings
    extraConf: |-

  ## configuration of fluentd monitoring metrics
  ## input -> fluentd_input_status_num_records_total (~5% DPM increase for empty cluster)
  ## output -> fluentd_output_status_num_records_total (~25% DPM increase for empty cluster)
  monitoring:
    input: false
    output: false

  metadata:
    ## Option to control the enabling of metadata filter plugin cache_size.
    ## ref: https://github.com/fabric8io/fluent-plugin-kubernetes_metadata_filter#configuration
    cacheSize: "10000"
    ## Option to control the enabling of metadata filter plugin cache_ttl (in seconds).
    ## ref: https://github.com/fabric8io/fluent-plugin-kubernetes_metadata_filter#configuration
    cacheTtl: "7200"
    ## Option to control the interval at which metadata cache is asynchronously refreshed (in seconds).
    cacheRefresh: "3600"
    ## Option to control the variation in seconds by which the cacheRefresh option is changed for each pod separately.
    ## For example, if cache refresh is 1 hour and variation is 15 minutes, then actual cache refresh interval
    ## will be a random value between 45 minutes and 1 hour 15 minutes, different for each pod. This helps spread
    ## the load on API server that the cache refresh induces. Setting this to 0 disables cache refresh variation.
    cacheRefreshVariation: "900"
    ## Option to give plugin specific log level
    pluginLogLevel: "error"
    ## Option to specify K8s API versions
    coreApiVersions:
      - v1
    ## Option to specify K8s API groups
    apiGroups:
      - apps/v1
      - extensions/v1beta1

  logs:
    enabled: true
    statefulset:
      nodeSelector: {}
      tolerations: []
      affinity: {}
      ## Acceptable values for podAntiAffinity:
      ## soft: specifies preferences that the scheduler will try to enforce but will not guarantee (Default)
      ## hard: specifies rules that must be met for a pod to be scheduled onto a node
      podAntiAffinity: "soft"
      replicaCount: 3
      resources:
        limits:
          memory: 1Gi
          cpu: 1000m
        requests:
          memory: 768Mi
          cpu: 500m
      ## Option to define priorityClassName to assign a priority class to pods.
      priorityClassName:

      ## Add custom labels only to logs fluentd sts pods
      podLabels: {}
      ## Add custom annotations only to logs fluentd sts pods
      podAnnotations: {}

      ## Set securityContext for containers running in pods in logs statefulset.
      containers:
        fluentd:
          securityContext: {}

    ## Option to turn autoscaling on for fluentd and specify params for HPA.
    ## Autoscaling needs metrics-server to access cpu metrics.
    autoscaling:
      enabled: false
      minReplicas: 3
      maxReplicas: 10
      targetCPUUtilizationPercentage: 50
      # targetMemoryUtilizationPercentage: 50

    ## Option to specify PodDisrutionBudgets
    ## You can specify only one of maxUnavailable and minAvailable in a single PodDisruptionBudget
    podDisruptionBudget:
      minAvailable: 2
    ## To use maxUnavailable, set minAvailable to null and uncomment the below:
    #   maxUnavailable: 1

    rawConfig: |-
      @include common.conf
      @include logs.conf

    ## Configuration for the forward input plugin that receives logs from FluentBit
    ## ref: https://docs.fluentd.org/input/forward
    input:
      ## Use to specify additional config, including transport or security options.
      forwardExtraConf: |-

    ## Configuration for sumologic output plugin
    ## ref: https://github.com/SumoLogic/fluentd-output-sumologic
    ## ref: https://github.com/SumoLogic/sumologic-kubernetes-collection/blob/main/deploy/helm/sumologic/conf/logs/fluentd/logs.output.conf
    output:
      ## Format to post logs into Sumo: fields, json, json_merge, or text.
      ## NOTE: for logs metadata, fields is required.
      logFormat: fields
      ## Option to control adding timestamp to logs.
      addTimestamp: true
      ## Field name when add_timestamp is on.
      timestampKey: "timestamp"
      ## Option to give plugin specific log level
      pluginLogLevel: "error"
      ## Additional config parameters for sumologic output plugin
      extraConf: |-

    ## Additional config for custom log pipelines
    ## ref: TODO: documentation for custom logs pipelines
    extraLogs: |-

    ## Container log configuration
    containers:
      ## To override the entire contents of logs.source.containers.conf file. Leave empty for the default pipeline
      overrideRawConfig: |-

      outputConf: |-
        @include logs.output.conf

      ## Override output section for container logs. Leave empty for the default output section
      overrideOutputConf: |-

      ## Set the _sourceName metadata field in Sumo Logic.
      sourceName: "%{namespace}.%{pod}.%{container}"
      ## Set the _sourceCategory metadata field in Sumo Logic.
      sourceCategory: "%{namespace}/%{pod_name}"
      ## Set the prefix, for _sourceCategory metadata.
      sourceCategoryPrefix: "kubernetes/"
      ## Used to replace - with another character.
      sourceCategoryReplaceDash: "/"

      ## A regular expression for containers.
      ## Matching containers will be excluded from Sumo. The logs will still be sent to FluentD.
      excludeContainerRegex: ""
      ## A regular expression for hosts.
      ## Matching hosts will be excluded from Sumo. The logs will still be sent to FluentD.
      excludeHostRegex: ""
      ## A regular expression for namespaces.
      ## Matching namespaces will be excluded from Sumo. The logs will still be sent to FluentD.
      excludeNamespaceRegex: ""
      ## A regular expression for pods.
      ## Matching pods will be excluded from Sumo. The logs will still be sent to FluentD.
      excludePodRegex: ""

      ## Defines whether container-level pod annotations are enabled. Setting this to `true` might slightly affect Fluentd performance.
      ## ref: https://github.com/SumoLogic/sumologic-kubernetes-fluentd/tree/v1.12.1-sumo-2/fluent-plugin-kubernetes-sumologic#container-level-pod-annotations
      perContainerAnnotationsEnabled: false
      ## Defines the list of prefixes of container-level pod annotations.
      ## ref: https://github.com/SumoLogic/sumologic-kubernetes-fluentd/tree/v1.12.1-sumo-2/fluent-plugin-kubernetes-sumologic#container-level-pod-annotations
      perContainerAnnotationPrefixes: []

      ## ref: https://github.com/fabric8io/fluent-plugin-kubernetes_metadata_filter#configuration
      k8sMetadataFilter:
        ## Option to control the enabling of metadata filter plugin watch.
        watch: "true"
        ## path to CA file for Kubernetes server certificate validation
        caFile: ""
        ## Validate SSL certificates
        verifySsl: true
        ## Path to a client cert file to authenticate to the API server
        clientCert: ""
        ## Path to a client key file to authenticate to the API server
        clientKey: ""
        ## Path to a file containing the bearer token to use for authentication
        bearerTokenFile: ""

      ## To use additional filter plugins
      extraFilterPluginConf: |-

      ## To use additional output plugins
      extraOutputPluginConf: |-

      ## To enable stiching multiline logs in fluentd when fluent-bit Multiline feature is On
      multiline:
        enabled: true

    ## Kubelet log configuration
    kubelet:
      enabled: true
      ## To use additional filter plugins
      extraFilterPluginConf: |-

      ## To use additional output plugins
      extraOutputPluginConf: |-

      outputConf: |-
        @include logs.output.conf

      ## Override output section for kubelet logs. Leave empty for the default output section.
      overrideOutputConf: |-

      ## Set the _sourceName metadata field in Sumo Logic.
      sourceName: "k8s_kubelet"
      ## Set the _sourceCategory metadata field in Sumo Logic.
      sourceCategory: "kubelet"
      ## Set the prefix, for _sourceCategory metadata.
      sourceCategoryPrefix: "kubernetes/"
      ## Used to replace - with another character.
      sourceCategoryReplaceDash: "/"

      ## A regular expression for facility.
      ## Matching facility will be excluded from Sumo. The logs will still be sent to FluentD.
      excludeFacilityRegex: ""
      ## A regular expression for hosts.
      ## Matching hosts will be excluded from Sumo. The logs will still be sent to FluentD.
      excludeHostRegex: ""
      ## A regular expression for priority.
      ## Matching priority will be excluded from Sumo. The logs will still be sent to FluentD.
      excludePriorityRegex: ""
      ## A regular expression for unit.
      ## Matching unit will be excluded from Sumo. The logs will still be sent to FluentD.
      excludeUnitRegex: ""

    ## Systemd log configuration
    systemd:
      enabled: true
      ## To use additional filter plugins
      extraFilterPluginConf: |-

      ## To use additional output plugins
      extraOutputPluginConf: |-

      outputConf: |-
        @include logs.output.conf

      ## Override output section for systemd logs. Leave empty for the default output section.
      overrideOutputConf: |-

      ## Set the _sourceName metadata field in Sumo Logic.
      sourceName: "k8s_systemd"
      ## Set the _sourceCategory metadata field in Sumo Logic.
      sourceCategory: "system"
      ## Set the prefix, for _sourceCategory metadata.
      sourceCategoryPrefix: "kubernetes/"
      ## Used to replace - with another character.
      sourceCategoryReplaceDash: "/"

      ## A regular expression for facility.
      ## Matching facility will be excluded from Sumo. The logs will still be sent to FluentD.
      excludeFacilityRegex: ""
      ## A regular expression for hosts.
      ## Matching hosts will be excluded from Sumo. The logs will still be sent to FluentD.
      excludeHostRegex: ""
      ## A regular expression for priority.
      ## Matching priority will be excluded from Sumo. The logs will still be sent to FluentD.
      excludePriorityRegex: ""
      ## A regular expression for unit.
      ## Matching unit will be excluded from Sumo. The logs will still be sent to FluentD.
      excludeUnitRegex: ""

    ## Default log configuration (catch-all)
    default:
      ## To use additional filter plugins
      extraFilterPluginConf: |-

      ## To use additional output plugins
      extraOutputPluginConf: |-

      outputConf: |-
        @include logs.output.conf

      ## Override output section for untagged logs. Leave empty for the default output section.
      overrideOutputConf: |-

      ## Set the _sourceName metadata field in Sumo Logic.
      sourceName: "k8s_default"
      ## Set the _sourceCategory metadata field in Sumo Logic.
      sourceCategory: "default"
      ## Set the prefix, for _sourceCategory metadata.
      sourceCategoryPrefix: "kubernetes/"
      ## Used to replace - with another character.
      sourceCategoryReplaceDash: "/"

      ## A regular expression for facility.
      ## Matching facility will be excluded from Sumo. The logs will still be sent to FluentD.
      excludeFacilityRegex: ""
      ## A regular expression for hosts.
      ## Matching hosts will be excluded from Sumo. The logs will still be sent to FluentD.
      excludeHostRegex: ""
      ## A regular expression for priority.
      ## Matching priority will be excluded from Sumo. The logs will still be sent to FluentD.
      excludePriorityRegex: ""
      ## A regular expression for unit.
      ## Matching unit will be excluded from Sumo. The logs will still be sent to FluentD.
      excludeUnitRegex: ""

    ## Extra Environment Values - allows yaml definitions
    # extraEnvVars:
    #   - name: VALUE_FROM_SECRET
    #     valueFrom:
    #       secretKeyRef:
    #         name: secret_name
    #         key: secret_key

    # extraVolumes:
    #   - name: es-certs
    #     secret:
    #       defaultMode: 420
    #       secretName: es-certs
    # extraVolumeMounts:
    #   - name: es-certs
    #     mountPath: /certs
    #     readOnly: true

  metrics:
    enabled: true
    statefulset:
      nodeSelector: {}
      tolerations: []
      affinity: {}
      ## Acceptable values for podAntiAffinity:
      ## soft: specifies preferences that the scheduler will try to enforce but will not guarantee (Default)
      ## hard: specifies rules that must be met for a pod to be scheduled onto a node
      podAntiAffinity: "soft"
      replicaCount: 3
      resources:
        limits:
          memory: 1Gi
          cpu: 1000m
        requests:
          memory: 768Mi
          cpu: 500m
      ## Option to define priorityClassName to assign a priority class to pods.
      priorityClassName:

      ## Add custom labels only to metrics fluentd sts pods
      podLabels: {}
      ## Add custom annotations only to metrics fluentd sts pods
      podAnnotations: {}

      ## Set securityContext for containers running in pods in metrics statefulset.
      containers:
        fluentd:
          securityContext: {}

    ## Option to turn autoscaling on for fluentd and specify params for HPA.
    ## Autoscaling needs metrics-server to access cpu metrics.
    autoscaling:
      enabled: false
      minReplicas: 3
      maxReplicas: 10
      targetCPUUtilizationPercentage: 50
      # targetMemoryUtilizationPercentage: 50

    ## Option to specify PodDisrutionBudgets
    ## You can specify only one of maxUnavailable and minAvailable in a single PodDisruptionBudget
    podDisruptionBudget:
      minAvailable: 2

    rawConfig: |-
      @include common.conf
      @include metrics.conf

    ## Configuration for sumologic output plugin
    ## ref: https://github.com/SumoLogic/fluentd-output-sumologic
    ## ref: https://github.com/SumoLogic/sumologic-kubernetes-collection/blob/main/deploy/helm/sumologic/conf/metrics/fluentd/metrics.output.conf
    outputConf: |-
      @include metrics.output.conf

    ## Override output section for metrics. Leave empty for the default output section
    overrideOutputConf: |-

    ## To use additional filter plugins
    extraFilterPluginConf: |-

    ## To use additional output plugins
    extraOutputPluginConf: |-

    ## Extra Environment Values - allows yaml definitions
    # extraEnvVars:
    #   - name: VALUE_FROM_SECRET
    #     valueFrom:
    #       secretKeyRef:
    #         name: secret_name
    #         key: secret_key

    # extraVolumes:
    #   - name: es-certs
    #     secret:
    #       defaultMode: 420
    #       secretName: es-certs
    # extraVolumeMounts:
    #   - name: es-certs
    #     mountPath: /certs
    #     readOnly: true

    ## Output configuration
    ## tag: tag for fluentd match
    ## id: sumologic output @id
    ## endpoint: [optional] [output key by default] It should match the sumologic.collector.sources.metrics[].endpoint
    ## drop: [optional] [false by default] Change it to true to drop traffic for specific output
    ## weight: [optional [0 by default] Order of fluentd output (lower means higher priority)
    ## The weight has meaning in case of fluentd matches
    output:
      apiserver:
        tag: prometheus.metrics.apiserver**
        id: sumologic.endpoint.metrics.apiserver
        weight: 90
      kubelet:
        tag: prometheus.metrics.kubelet**
        id: sumologic.endpoint.metrics.kubelet
        weight: 90
      container:
        tag: prometheus.metrics.container**
        id: sumologic.endpoint.metrics.container
        source: kubelet
        weight: 90
      controller:
        tag: prometheus.metrics.controller-manager**
        id: sumologic.endpoint.metrics.kube.controller.manager
        weight: 90
      scheduler:
        tag: prometheus.metrics.scheduler**
        id: sumologic.endpoint.metrics.kube.scheduler
        weight: 90
      state:
        tag: prometheus.metrics.state**
        id: sumologic.endpoint.metrics.kube.state
        weight: 90
      node:
        tag: prometheus.metrics.node**
        id: sumologic.endpoint.metrics.node.exporter
        weight: 90
      control-plane:
        tag: prometheus.metrics.control-plane**
        id: sumologic.endpoint.metrics.control.plane
        weight: 90
      default:
        tag: prometheus.metrics**
        id: sumologic.endpoint.metrics
        weight: 100

## Configure metrics-server
## ref: https://github.com/bitnami/charts/blob/master/bitnami/metrics-server/values.yaml
metrics-server:
  ## Set the enabled flag to true for enabling metrics-server.
  ## This is required before enabling fluentd autoscaling unless you have an existing metrics-server in the cluster.
  enabled: false
  apiService:
    create: true
  extraArgs:
    kubelet-insecure-tls: true
    kubelet-preferred-address-types: InternalIP,ExternalIP,Hostname
  ## Optionally specify image options for metrics-server
  # image:
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    # pullSecrets:
    #   - imagepullsecret

## Configure fluent-bit
## ref: https://github.com/fluent/helm-charts/blob/master/charts/fluent-bit/values.yaml
fluent-bit:
  image:
    repository: public.ecr.aws/sumologic/fluent-bit
    pullPolicy: IfNotPresent
    # If specified, use these secrets to access the image
    # pullSecrets:
    #   - name: "image-pull-secret"

  ## Resource limits for fluent-bit
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 10m
    #   memory: 8Mi

  ## Uncomment the flag below to not install fluent-bit helm chart as a dependency along with this helm chart.
  ## Comment it out if you wish to have the fluent-bit dependency installed.
  ## Setting the flag to true instead of commenting out will break other functionality.
  # enabled: false

  ## Configuration for fluent-bit service
  service:
    ## Add custom labels to fluent-bit service
    labels:
      sumologic.com/scrape: "true"  # label used by fluent-bit service monitor

  ## Add custom pod labels to fluent-bit daemonset pods
  podLabels: {}

  ## Add custom pod annotations to fluent-bit daemonset pods
  podAnnotations: {}

  ## Set securityContext of fluent-bit daemonset pods as privileged for running in Openshift
  # securityContext:
  #   privileged: true

  env:
    - name: FLUENTD_LOGS_SVC
      valueFrom:
        configMapKeyRef:
          name: sumologic-configmap
          key: fluentdLogs
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace

  tolerations:
    - effect: NoSchedule
      operator: Exists

  extraVolumeMounts:
    - mountPath: /tail-db
      name: tail-db
  extraVolumes:
    - hostPath:
        path: /var/lib/fluent-bit
        type: DirectoryOrCreate
      name: tail-db

  ## https://docs.fluentbit.io/manual/administration/configuring-fluent-bit
  config:
    ## https://docs.fluentbit.io/manual/service
    service: |
      [SERVICE]
          Flush        1
          Daemon       Off
          Log_Level    info
          Parsers_File parsers.conf
          Parsers_File custom_parsers.conf
          HTTP_Server  On
          HTTP_Listen  0.0.0.0
          HTTP_Port    2020
    ## https://docs.fluentbit.io/manual/pipeline/inputs
    ## ref: https://github.com/SumoLogic/sumologic-kubernetes-collection/blob/main/deploy/docs/ContainerLogs.md
    inputs: |
      [INPUT]
          Name                tail
          Path                /var/log/containers/*.log
          Docker_Mode         On
          Docker_Mode_Parser  multi_line
          Tag                 containers.*
          Refresh_Interval    1
          Rotate_Wait         60
          Mem_Buf_Limit       5MB
          Skip_Long_Lines     On
          DB                  /tail-db/tail-containers-state-sumo.db
          DB.Sync             Normal
      [INPUT]
          Name            systemd
          Tag             host.*
          DB              /tail-db/systemd-state-sumo.db
          Systemd_Filter  _SYSTEMD_UNIT=addon-config.service
          Systemd_Filter  _SYSTEMD_UNIT=addon-run.service
          Systemd_Filter  _SYSTEMD_UNIT=cfn-etcd-environment.service
          Systemd_Filter  _SYSTEMD_UNIT=cfn-signal.service
          Systemd_Filter  _SYSTEMD_UNIT=clean-ca-certificates.service
          Systemd_Filter  _SYSTEMD_UNIT=containerd.service
          Systemd_Filter  _SYSTEMD_UNIT=coreos-metadata.service
          Systemd_Filter  _SYSTEMD_UNIT=coreos-setup-environment.service
          Systemd_Filter  _SYSTEMD_UNIT=coreos-tmpfiles.service
          Systemd_Filter  _SYSTEMD_UNIT=dbus.service
          Systemd_Filter  _SYSTEMD_UNIT=docker.service
          Systemd_Filter  _SYSTEMD_UNIT=efs.service
          Systemd_Filter  _SYSTEMD_UNIT=etcd-member.service
          Systemd_Filter  _SYSTEMD_UNIT=etcd.service
          Systemd_Filter  _SYSTEMD_UNIT=etcd2.service
          Systemd_Filter  _SYSTEMD_UNIT=etcd3.service
          Systemd_Filter  _SYSTEMD_UNIT=etcdadm-check.service
          Systemd_Filter  _SYSTEMD_UNIT=etcdadm-reconfigure.service
          Systemd_Filter  _SYSTEMD_UNIT=etcdadm-save.service
          Systemd_Filter  _SYSTEMD_UNIT=etcdadm-update-status.service
          Systemd_Filter  _SYSTEMD_UNIT=flanneld.service
          Systemd_Filter  _SYSTEMD_UNIT=format-etcd2-volume.service
          Systemd_Filter  _SYSTEMD_UNIT=kube-node-taint-and-uncordon.service
          Systemd_Filter  _SYSTEMD_UNIT=kubelet.service
          Systemd_Filter  _SYSTEMD_UNIT=ldconfig.service
          Systemd_Filter  _SYSTEMD_UNIT=locksmithd.service
          Systemd_Filter  _SYSTEMD_UNIT=logrotate.service
          Systemd_Filter  _SYSTEMD_UNIT=lvm2-monitor.service
          Systemd_Filter  _SYSTEMD_UNIT=mdmon.service
          Systemd_Filter  _SYSTEMD_UNIT=nfs-idmapd.service
          Systemd_Filter  _SYSTEMD_UNIT=nfs-mountd.service
          Systemd_Filter  _SYSTEMD_UNIT=nfs-server.service
          Systemd_Filter  _SYSTEMD_UNIT=nfs-utils.service
          Systemd_Filter  _SYSTEMD_UNIT=node-problem-detector.service
          Systemd_Filter  _SYSTEMD_UNIT=ntp.service
          Systemd_Filter  _SYSTEMD_UNIT=oem-cloudinit.service
          Systemd_Filter  _SYSTEMD_UNIT=rkt-gc.service
          Systemd_Filter  _SYSTEMD_UNIT=rkt-metadata.service
          Systemd_Filter  _SYSTEMD_UNIT=rpc-idmapd.service
          Systemd_Filter  _SYSTEMD_UNIT=rpc-mountd.service
          Systemd_Filter  _SYSTEMD_UNIT=rpc-statd.service
          Systemd_Filter  _SYSTEMD_UNIT=rpcbind.service
          Systemd_Filter  _SYSTEMD_UNIT=set-aws-environment.service
          Systemd_Filter  _SYSTEMD_UNIT=system-cloudinit.service
          Systemd_Filter  _SYSTEMD_UNIT=systemd-timesyncd.service
          Systemd_Filter  _SYSTEMD_UNIT=update-ca-certificates.service
          Systemd_Filter  _SYSTEMD_UNIT=user-cloudinit.service
          Systemd_Filter  _SYSTEMD_UNIT=var-lib-etcd2.service
          Max_Entries     1000
          Read_From_Tail  true
    ## NOTE: Requires trailing "." for fully-qualified name resolution
    outputs: |
      [OUTPUT]
          Name          forward
          Match         *
          Host          ${FLUENTD_LOGS_SVC}.${NAMESPACE}.svc.cluster.local.
          Port          24321
          Retry_Limit   False
          tls           off
          tls.verify    on
          tls.debug     1
          # Disable keepalive for better load balancing
          net.keepalive off
    customParsers: |
      [PARSER]
          Name        multi_line
          Format      regex
          Regex       (?<log>^{"log":"\d{4}-\d{1,2}-\d{1,2}.\d{2}:\d{2}:\d{2}.*)
      [PARSER]
          Name         crio
          Format       regex
          Regex        ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$
          Time_Key     time
          Time_Format  %Y-%m-%dT%H:%M:%S.%L%z
      [PARSER]
          Name         containerd
          Format       regex
          Regex        ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$
          Time_Key     time
          Time_Format  %Y-%m-%dT%H:%M:%S.%LZ

## Configure kube-prometheus-stack
## ref: https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
kube-prometheus-stack:

  ## Uncomment the flag below to not install kube-prometheus-stack helm chart
  ## as a dependency along with this helm chart.
  ## Comment it out if you wish to have the prometheus-operator dependency installed.
  ## Setting the flag to true instead of commenting out will break other functionality.
  # enabled: false

  # global:
    ## Reference to one or more secrets to be used when pulling images
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    # imagePullSecrets:
    #   - name: "image-pull-secret"

  ## Labels to apply to all kube-prometheus-stack resources
  commonLabels: {}

  ## k8s pre-1.14 prometheus recording rules
  additionalPrometheusRulesMap:
    pre-1.14-node-rules:
      groups:
        - name: node-pre-1.14.rules
          rules:
            - expr: 1 - avg(rate(node_cpu_seconds_total{job="node-exporter",mode="idle"}[1m]))
              record: :node_cpu_utilisation:avg1m
            - expr: |-
                1 - avg by (node) (
                  rate(node_cpu_seconds_total{job="node-exporter",mode="idle"}[1m])
                * on (namespace, pod) group_left(node)
                  node_namespace_pod:kube_pod_info:)
              record: node:node_cpu_utilisation:avg1m
            - expr: |-
                1 -
                sum(
                  node_memory_MemFree_bytes{job="node-exporter"} +
                  node_memory_Cached_bytes{job="node-exporter"} +
                  node_memory_Buffers_bytes{job="node-exporter"}
                )
                /
                sum(node_memory_MemTotal_bytes{job="node-exporter"})
              record: ':node_memory_utilisation:'
            - expr: |-
                sum by (node) (
                  (
                    node_memory_MemFree_bytes{job="node-exporter"} +
                    node_memory_Cached_bytes{job="node-exporter"} +
                    node_memory_Buffers_bytes{job="node-exporter"}
                  )
                  * on (namespace, pod) group_left(node)
                    node_namespace_pod:kube_pod_info:
                )
              record: node:node_memory_bytes_available:sum
            - expr: |-
                (node:node_memory_bytes_total:sum - node:node_memory_bytes_available:sum)
                /
                node:node_memory_bytes_total:sum
              record: node:node_memory_utilisation:ratio
            - expr: |-
                1 -
                sum by (node) (
                  (
                    node_memory_MemFree_bytes{job="node-exporter"} +
                    node_memory_Cached_bytes{job="node-exporter"} +
                    node_memory_Buffers_bytes{job="node-exporter"}
                  )
                * on (namespace, pod) group_left(node)
                  node_namespace_pod:kube_pod_info:
                )
                /
                sum by (node) (
                  node_memory_MemTotal_bytes{job="node-exporter"}
                * on (namespace, pod) group_left(node)
                  node_namespace_pod:kube_pod_info:
                )
              record: 'node:node_memory_utilisation:'
            - expr: 1 - (node:node_memory_bytes_available:sum / node:node_memory_bytes_total:sum)
              record: 'node:node_memory_utilisation_2:'
            - expr: |-
                max by (instance, namespace, pod, device) ((node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"}
                - node_filesystem_avail_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
                / node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
              record: 'node:node_filesystem_usage:'
            - expr: |-
                sum by (node) (
                  node_memory_MemTotal_bytes{job="node-exporter"}
                  * on (namespace, pod) group_left(node)
                    node_namespace_pod:kube_pod_info:
                )
              record: node:node_memory_bytes_total:sum
            - expr: |-
                sum(irate(node_network_receive_bytes_total{job="node-exporter",device!~"veth.+"}[1m])) +
                sum(irate(node_network_transmit_bytes_total{job="node-exporter",device!~"veth.+"}[1m]))
              record: :node_net_utilisation:sum_irate
            - expr: |-
                sum by (node) (
                  (irate(node_network_receive_bytes_total{job="node-exporter",device!~"veth.+"}[1m]) +
                  irate(node_network_transmit_bytes_total{job="node-exporter",device!~"veth.+"}[1m]))
                * on (namespace, pod) group_left(node)
                  node_namespace_pod:kube_pod_info:
                )
              record: node:node_net_utilisation:sum_irate
            - expr: |-
                sum(irate(node_network_receive_drop_total{job="node-exporter",device!~"veth.+"}[1m])) +
                sum(irate(node_network_transmit_drop_total{job="node-exporter",device!~"veth.+"}[1m]))
              record: :node_net_saturation:sum_irate
            - expr: |-
                sum by (node) (
                  (irate(node_network_receive_drop_total{job="node-exporter",device!~"veth.+"}[1m]) +
                  irate(node_network_transmit_drop_total{job="node-exporter",device!~"veth.+"}[1m]))
                * on (namespace, pod) group_left(node)
                  node_namespace_pod:kube_pod_info:
                )
              record: node:node_net_saturation:sum_irate
            - expr: |-
                max by (instance, namespace, pod, device) ((node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"}
                - node_filesystem_avail_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
                / node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
              record: 'node:node_filesystem_usage:'
            - expr: |-
                sum(node_load1{job="node-exporter"})
                /
                sum(node:node_num_cpu:sum)
              record: ':node_cpu_saturation_load1:'
            - expr: |-
                sum by (node) (
                  node_load1{job="node-exporter"}
                * on (namespace, pod) group_left(node)
                  node_namespace_pod:kube_pod_info:
                )
                /
                node:node_num_cpu:sum
              record: 'node:node_cpu_saturation_load1:'
            - expr: avg(irate(node_disk_io_time_weighted_seconds_total{job="node-exporter",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m]))
              record: :node_disk_saturation:avg_irate
            - expr: |-
                avg by (node) (
                  irate(node_disk_io_time_weighted_seconds_total{job="node-exporter",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m])
                * on (namespace, pod) group_left(node)
                  node_namespace_pod:kube_pod_info:
                )
              record: node:node_disk_saturation:avg_irate
            - expr: avg(irate(node_disk_io_time_seconds_total{job="node-exporter",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m]))
              record: :node_disk_utilisation:avg_irate
            - expr: |-
                avg by (node) (
                  irate(node_disk_io_time_seconds_total{job="node-exporter",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m])
                * on (namespace, pod) group_left(node)
                  node_namespace_pod:kube_pod_info:
                )
              record: node:node_disk_utilisation:avg_irate
            - expr: |-
                1e3 * sum(
                  (rate(node_vmstat_pgpgin{job="node-exporter"}[1m])
                + rate(node_vmstat_pgpgout{job="node-exporter"}[1m]))
                )
              record: :node_memory_swap_io_bytes:sum_rate
            - expr: |-
                1e3 * sum by (node) (
                  (rate(node_vmstat_pgpgin{job="node-exporter"}[1m])
                + rate(node_vmstat_pgpgout{job="node-exporter"}[1m]))
                * on (namespace, pod) group_left(node)
                  node_namespace_pod:kube_pod_info:
                )
              record: node:node_memory_swap_io_bytes:sum_rate
            - expr: |-
                node:node_cpu_utilisation:avg1m
                  *
                node:node_num_cpu:sum
                  /
                scalar(sum(node:node_num_cpu:sum))
              record: node:cluster_cpu_utilisation:ratio
            - expr: |-
                (node:node_memory_bytes_total:sum - node:node_memory_bytes_available:sum)
                /
                scalar(sum(node:node_memory_bytes_total:sum))
              record: node:cluster_memory_utilisation:ratio
            - expr: |-
                sum by (node) (
                  node_load1{job="node-exporter"}
                * on (namespace, pod) group_left(node)
                  node_namespace_pod:kube_pod_info:
                )
                /
                node:node_num_cpu:sum
              record: 'node:node_cpu_saturation_load1:'
            - expr: |-
                max by (instance, namespace, pod, device) (
                  node_filesystem_avail_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"}
                  /
                  node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"}
                  )
              record: 'node:node_filesystem_avail:'
            - expr: |-
                max by (instance, namespace, pod, device) ((node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"}
                - node_filesystem_avail_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
                / node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
              record: 'node:node_filesystem_usage:'
            - expr: |-
                max(
                  max(
                    kube_pod_info{job="kube-state-metrics", host_ip!=""}
                  ) by (node, host_ip)
                  * on (host_ip) group_right (node)
                  label_replace(
                    (
                      max(node_filesystem_files{job="node-exporter", mountpoint="/"})
                      by (instance)
                    ), "host_ip", "$1", "instance", "(.*):.*"
                  )
                ) by (node)
              record: 'node:node_inodes_total:'
            - expr: |-
                max(
                  max(
                    kube_pod_info{job="kube-state-metrics", host_ip!=""}
                  ) by (node, host_ip)
                  * on (host_ip) group_right (node)
                  label_replace(
                    (
                      max(node_filesystem_files_free{job="node-exporter", mountpoint="/"})
                      by (instance)
                    ), "host_ip", "$1", "instance", "(.*):.*"
                  )
                ) by (node)
              record: 'node:node_inodes_free:'

  ## NOTE changing the serviceMonitor scrape interval to be >1m can result in metrics from recording
  ## rules to be missing and empty panels in Sumo Logic Kubernetes apps.
  kubeApiServer:
    serviceMonitor:
      ## Scrape interval. If not set, the Prometheus default scrape interval is used.
      interval:
  kubelet:
    serviceMonitor:
      ## Scrape interval. If not set, the Prometheus default scrape interval is used.
      interval:
      ## Enable scraping /metrics/resource/v1alpha1 from kubelet's service
      resource: false
  kubeControllerManager:
    serviceMonitor:
      ## Scrape interval. If not set, the Prometheus default scrape interval is used.
      interval:
  coreDns:
    serviceMonitor:
      ## Scrape interval. If not set, the Prometheus default scrape interval is used.
      interval:
  kubeEtcd:
    serviceMonitor:
      ## Scrape interval. If not set, the Prometheus default scrape interval is used.
      interval:
  kubeScheduler:
    serviceMonitor:
      ## Scrape interval. If not set, the Prometheus default scrape interval is used.
      interval:
  kubeStateMetrics:
    serviceMonitor:
      ## Scrape interval. If not set, the Prometheus default scrape interval is used.
      interval:
  nodeExporter:
    serviceMonitor:
      ## Scrape interval. If not set, the Prometheus default scrape interval is used.
      interval:

  alertmanager:
    enabled: false
  grafana:
    enabled: false
    defaultDashboardsEnabled: false
  prometheusOperator:
    ## Labels to add to the operator pod
    podLabels: {}
    ## Annotations to add to the operator pod
    podAnnotations: {}
    ## Resource limits for prometheus operator
    resources: {}
      # limits:
      #   cpu: 200m
      #   memory: 200Mi
      # requests:
      #   cpu: 100m
      #   memory: 100Mi
    admissionWebhooks:
      enabled: false
    tls:
      enabled: false
  ## Resource limits for kube-state-metrics
  kube-state-metrics:
    ## Custom labels to apply to service, deployment and pods
    customLabels: {}
    ## Additional annotations for pods in the DaemonSet
    podAnnotations: {}
    resources: {}
      # limits:
      #   cpu: 100m
      #   memory: 64Mi
      # requests:
      #   cpu: 10m
      #   memory: 32Mi
  ## Resource limits for prometheus node exporter
  prometheus-node-exporter:
    ## Additional labels for pods in the DaemonSet
    podLabels: {}
    ## Additional annotations for pods in the DaemonSet
    podAnnotations: {}
    resources: {}
      # limits:
      #   cpu: 200m
      #   memory: 50Mi
      # requests:
      #   cpu: 100m
      #   memory: 30Mi
  prometheus:
    additionalServiceMonitors:
      - name: collection-sumologic-fluentd-logs
        additionalLabels:
          sumologic.com/app: fluentd-logs
        endpoints:
          - port: metrics
        namespaceSelector:
          matchNames:
            - $(NAMESPACE)
        selector:
          matchLabels:
            sumologic.com/app: fluentd-logs
            sumologic.com/scrape: "true"
      - name: collection-sumologic-fluentd-metrics
        additionalLabels:
          sumologic.com/app: fluentd-metrics
        endpoints:
          - port: metrics
        namespaceSelector:
          matchNames:
            - $(NAMESPACE)
        selector:
          matchLabels:
            sumologic.com/app: fluentd-metrics
            sumologic.com/scrape: "true"
      - name: collection-fluent-bit
        additionalLabels:
          app: collection-fluent-bit
        endpoints:
          - port: http
            path: /api/v1/metrics/prometheus
        namespaceSelector:
          matchNames:
            - $(NAMESPACE)
        selector:
          matchLabels:
            app.kubernetes.io/name: fluent-bit
            sumologic.com/scrape: "true"
    prometheusSpec:
      ## Prometheus default scrape interval, default from upstream Kube Prometheus Stack Helm chart
      ## NOTE changing the scrape interval to be >1m can result in metrics
      ## from recording rules to be missing and empty panels in Sumo Logic Kubernetes apps.
      scrapeInterval: "30s"
      ## Prometheus data retention period
      retention: "1d"
      ## Add custom pod annotations and labels to prometheus pods
      podMetadata:
        labels: {}
        annotations: {}
      ## Define resources requests and limits for single Pods.
      resources:
        limits:
          cpu: 2000m
          memory: 8Gi
        requests:
          cpu: 500m
          memory: 1Gi
      thanos:
        baseImage: quay.io/thanos/thanos
        version: v0.10.0
        ## Defines the resource requirements for the Thanos sidecar
        ## Setting those as there are no default values in the upstream chart
        resources:
          limits:
            cpu: 10m
            memory: 32Mi
          requests:
            cpu: 1m
            memory: 8Mi
      containers:
        - name: "config-reloader"
          env:
            - name: FLUENTD_METRICS_SVC
              valueFrom:
                configMapKeyRef:
                  name: sumologic-configmap
                  key: fluentdMetrics
            - name: NAMESPACE
              valueFrom:
                configMapKeyRef:
                  name: sumologic-configmap
                  key: fluentdNamespace

      ## Enable WAL compression to reduce Prometheus memory consumption
      walCompression: true

      ## prometheus scrape config
      additionalScrapeConfigs:
        ## scraping metrics basing on annotations:
        ##   - prometheus.io/scrape: true - to scrape metrics from the pod
        ##   - prometheus.io/path: /metrics - path which the metric should be scrape from
        ##   - prometheus.io/port: 9113 - port which the metric should be scrape from
        ## rel: https://github.com/prometheus-operator/kube-prometheus/pull/16#issuecomment-424318647
        - job_name: 'kubernetes-pods'
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              target_label: __address__
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Node;(.*)
              target_label: node
              replacement: ${1}
              action: replace
            - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
              separator: ;
              regex: Pod;(.*)
              target_label: pod
              replacement: ${1}
              action: replace
            - source_labels: [__metrics_path__]
              separator: ;
              regex: (.*)
              target_label: endpoint
              replacement: $1
              action: replace
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: namespace
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: service
              replacement: $1
              action: replace
            - source_labels: [__meta_kubernetes_pod_name]
              separator: ;
              regex: (.*)
              target_label: pod
              replacement: $1
              action: replace
            - source_labels: [__meta_kubernetes_service_name]
              separator: ;
              regex: (.*)
              target_label: job
              replacement: ${1}
              action: replace

      remoteWrite:
        ## kube non pod state metrics
        ## kube_daemonset_status_current_number_scheduled
        ## kube_daemonset_status_desired_number_scheduled
        ## kube_daemonset_status_number_misscheduled
        ## kube_daemonset_status_number_unavailable
        ## kube_deployment_spec_replicas
        ## kube_deployment_status_replicas_available
        ## kube_deployment_status_replicas_unavailable
        ## kube_node_info
        ## kube_node_status_allocatable
        ## kube_node_status_capacity
        ## kube_node_status_condition
        ## kube_statefulset_metadata_generation
        ## kube_statefulset_replicas
        ## kube_statefulset_status_observed_generation
        ## kube_statefulset_status_replicas
        ## kube_hpa_spec_max_replicas
        ## kube_hpa_spec_min_replicas
        ## kube_hpa_status_current_replicas
        ## kube_hpa_status_desired_replicas
        - url: http://$(FLUENTD_METRICS_SVC).$(NAMESPACE).svc.cluster.local:9888/prometheus.metrics.state
          remoteTimeout: 5s
          writeRelabelConfigs:
            - action: keep
              regex: kube-state-metrics;(?:kube_statefulset_status_observed_generation|kube_statefulset_status_replicas|kube_statefulset_replicas|kube_statefulset_metadata_generation|kube_daemonset_status_current_number_scheduled|kube_daemonset_status_desired_number_scheduled|kube_daemonset_status_number_misscheduled|kube_daemonset_status_number_unavailable|kube_deployment_spec_replicas|kube_deployment_status_replicas_available|kube_deployment_status_replicas_unavailable|kube_node_info|kube_node_status_allocatable|kube_node_status_capacity|kube_node_status_condition|kube_hpa_spec_max_replicas|kube_hpa_spec_min_replicas|kube_hpa_status_current_replicas|kube_hpa_status_desired_replicas)
              sourceLabels: [job, __name__]
            - action: labelmap
              regex: (pod|service)
              replacement: service_discovery_${1}
            - action: labeldrop
              regex: (pod|service)
        ## kube pod state metrics
        ## kube_pod_container_info
        ## kube_pod_container_resource_limits
        ## kube_pod_container_resource_requests
        ## kube_pod_container_status_ready
        ## kube_pod_container_status_restarts_total
        ## kube_pod_container_status_terminated_reason
        ## kube_pod_container_status_waiting_reason
        ## kube_pod_status_phase
        - url: http://$(FLUENTD_METRICS_SVC).$(NAMESPACE).svc.cluster.local:9888/prometheus.metrics.state
          remoteTimeout: 5s
          writeRelabelConfigs:
            - action: keep
              regex: kube-state-metrics;(?:kube_pod_container_info|kube_pod_container_resource_requests|kube_pod_container_resource_limits|kube_pod_container_status_ready|kube_pod_container_status_terminated_reason|kube_pod_container_status_waiting_reason|kube_pod_container_status_restarts_total|kube_pod_status_phase)
              sourceLabels: [job, __name__]
        ## controller manager metrics
        ## https://kubernetes.io/docs/concepts/cluster-administration/monitoring/#kube-controller-manager-metrics
        ## e.g.
        ## cloudprovider_aws_api_request_duration_seconds_bucket
        ## cloudprovider_aws_api_request_duration_seconds_count
        ## cloudprovider_aws_api_request_duration_seconds_sum
        - url: http://$(FLUENTD_METRICS_SVC).$(NAMESPACE).svc.cluster.local:9888/prometheus.metrics.controller-manager
          remoteTimeout: 5s
          writeRelabelConfigs:
            - action: keep
              regex: kubelet;cloudprovider_.*_api_request_duration_seconds.*
              sourceLabels: [job, __name__]
        ## scheduler metrics_latency_microseconds
        ## scheduler_e2e_scheduling_duration_seconds_bucket
        ## scheduler_e2e_scheduling_duration_seconds_count
        ## scheduler_e2e_scheduling_duration_seconds_sum
        ## scheduler_binding_duration_seconds_bucket
        ## scheduler_binding_duration_seconds_count
        ## scheduler_binding_duration_seconds_sum
        ## scheduler_scheduling_algorithm_duration_seconds_bucket
        ## scheduler_scheduling_algorithm_duration_seconds_count
        ## scheduler_scheduling_algorithm_duration_seconds_sum
        - url: http://$(FLUENTD_METRICS_SVC).$(NAMESPACE).svc.cluster.local:9888/prometheus.metrics.scheduler
          remoteTimeout: 5s
          writeRelabelConfigs:
            - action: keep
              regex: kube-scheduler;scheduler_(?:e2e_scheduling|binding|scheduling_algorithm)_duration_seconds.*
              sourceLabels: [job, __name__]
        ## api server metrics:
        ## apiserver_request_count
        ## apiserver_request_total
        ## apiserver_request_duration_seconds_count
        ## apiserver_request_duration_seconds_sum
        ## apiserver_request_latencies_count
        ## apiserver_request_latencies_sum
        ## apiserver_request_latencies_summary
        ## apiserver_request_latencies_summary_count
        ## apiserver_request_latencies_summary_sum
        ## etcd_request_cache_get_duration_seconds_count
        ## etcd_request_cache_get_duration_seconds_sum
        ## etcd_request_cache_add_duration_seconds_count
        ## etcd_request_cache_add_duration_seconds_sum
        ## etcd_request_cache_add_latencies_summary_count
        ## etcd_request_cache_add_latencies_summary_sum
        ## etcd_request_cache_get_latencies_summary_count
        ## etcd_request_cache_get_latencies_summary_sum
        ## etcd_helper_cache_hit_count
        ## etcd_helper_cache_hit_total
        ## etcd_helper_cache_miss_count
        ## etcd_helper_cache_miss_total
        - url: http://$(FLUENTD_METRICS_SVC).$(NAMESPACE).svc.cluster.local:9888/prometheus.metrics.apiserver
          remoteTimeout: 5s
          writeRelabelConfigs:
            - action: keep
              regex: apiserver;(?:apiserver_request_(?:count|total)|apiserver_request_(?:duration_seconds|latencies)_(?:count|sum)|apiserver_request_latencies_summary(?:|_count|_sum)|etcd_request_cache_(?:add|get)_(?:duration_seconds|latencies_summary)_(?:count|sum)|etcd_helper_cache_(?:hit|miss)_(?:count|total))
              sourceLabels: [job, __name__]
        ## kubelet metrics:
        ## kubelet_docker_operations_errors
        ## kubelet_docker_operations_errors_total
        ## kubelet_docker_operations_duration_seconds_count
        ## kubelet_docker_operations_duration_seconds_sum
        ## kubelet_runtime_operations_duration_seconds_count
        ## kubelet_runtime_operations_duration_seconds_sum
        ## kubelet_running_container_count
        ## kubelet_running_containers
        ## kubelet_running_pod_count
        ## kubelet_running_pods
        ## kubelet_docker_operations_latency_microseconds
        ## kubelet_docker_operations_latency_microseconds_count
        ## kubelet_docker_operations_latency_microseconds_sum
        ## kubelet_runtime_operations_latency_microseconds
        ## kubelet_runtime_operations_latency_microseconds_count
        ## kubelet_runtime_operations_latency_microseconds_sum
        - url: http://$(FLUENTD_METRICS_SVC).$(NAMESPACE).svc.cluster.local:9888/prometheus.metrics.kubelet
          remoteTimeout: 5s
          writeRelabelConfigs:
            - action: keep
              regex: kubelet;(?:kubelet_docker_operations_errors(?:|_total)|kubelet_(?:docker|runtime)_operations_duration_seconds_(?:count|sum)|kubelet_running_(?:container|pod)(?:_count|s)|kubelet_(:?docker|runtime)_operations_latency_microseconds(?:|_count|_sum))
              sourceLabels: [job, __name__]
        ## cadvisor container metrics
        ## container_cpu_usage_seconds_total
        ## container_fs_limit_bytes
        ## container_fs_usage_bytes
        ## container_memory_working_set_bytes
        ## container_cpu_cfs_throttled_seconds_total
        - url: http://$(FLUENTD_METRICS_SVC).$(NAMESPACE).svc.cluster.local:9888/prometheus.metrics.container
          remoteTimeout: 5s
          writeRelabelConfigs:
            - action: labelmap
              regex: container_name
              replacement: container
            - action: drop
              regex: POD
              sourceLabels: [container]
            - action: keep
              regex: kubelet;.+;(?:container_cpu_usage_seconds_total|container_memory_working_set_bytes|container_fs_usage_bytes|container_fs_limit_bytes|container_cpu_cfs_throttled_seconds_total)
              sourceLabels: [job, container, __name__]
        ## cadvisor aggregate container metrics
        ## container_network_receive_bytes_total
        ## container_network_transmit_bytes_total
        - url: http://$(FLUENTD_METRICS_SVC).$(NAMESPACE).svc.cluster.local:9888/prometheus.metrics.container
          remoteTimeout: 5s
          writeRelabelConfigs:
            - action: keep
              regex: kubelet;(?:container_network_receive_bytes_total|container_network_transmit_bytes_total)
              sourceLabels: [job, __name__]
            - action: labeldrop
              regex: container
        ## node exporter metrics
        ## node_cpu_seconds_total
        ## node_load1
        ## node_load5
        ## node_load15
        - url: http://$(FLUENTD_METRICS_SVC).$(NAMESPACE).svc.cluster.local:9888/prometheus.metrics.node
          remoteTimeout: 5s
          writeRelabelConfigs:
            - action: keep
              regex: node-exporter;(?:node_load1|node_load5|node_load15|node_cpu_seconds_total)
              sourceLabels: [job, __name__]
        ## prometheus operator rules
        ## :kube_pod_info_node_count:
        ## :node_cpu_saturation_load1:
        ## :node_cpu_utilisation:avg1m
        ## :node_disk_saturation:avg_irate
        ## :node_disk_utilisation:avg_irate
        ## :node_memory_swap_io_bytes:sum_rate
        ## :node_memory_utilisation:
        ## :node_net_saturation:sum_irate
        ## :node_net_utilisation:sum_irate
        ## cluster_quantile:apiserver_request_duration_seconds:histogram_quantile
        ## cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile
        ## cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile
        ## cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile
        ## instance:node_filesystem_usage:sum
        ## instance:node_network_receive_bytes:rate:sum
        ## node:cluster_cpu_utilisation:ratio
        ## node:cluster_memory_utilisation:ratio
        ## node:node_cpu_saturation_load1:
        ## node:node_cpu_utilisation:avg1m
        ## node:node_disk_saturation:avg_irate
        ## node:node_disk_utilisation:avg_irate
        ## node:node_filesystem_avail:
        ## node:node_filesystem_usage:
        ## node:node_inodes_free:
        ## node:node_inodes_total:
        ## node:node_memory_bytes_total:sum
        ## node:node_memory_swap_io_bytes:sum_rate
        ## node:node_memory_utilisation:
        ## node:node_memory_utilisation:ratio
        ## node:node_memory_utilisation_2:
        ## node:node_net_saturation:sum_irate
        ## node:node_net_utilisation:sum_irate
        ## node:node_num_cpu:sum
        ## node_namespace_pod:kube_pod_info:
        - url: http://$(FLUENTD_METRICS_SVC).$(NAMESPACE).svc.cluster.local:9888/prometheus.metrics.operator.rule
          remoteTimeout: 5s
          writeRelabelConfigs:
            - action: keep
              regex: 'cluster_quantile:apiserver_request_duration_seconds:histogram_quantile|instance:node_filesystem_usage:sum|instance:node_network_receive_bytes:rate:sum|cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile|cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile|cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile|node_namespace_pod:kube_pod_info:|:kube_pod_info_node_count:|node:node_num_cpu:sum|:node_cpu_utilisation:avg1m|node:node_cpu_utilisation:avg1m|node:cluster_cpu_utilisation:ratio|:node_cpu_saturation_load1:|node:node_cpu_saturation_load1:|:node_memory_utilisation:|node:node_memory_bytes_total:sum|node:node_memory_utilisation:ratio|node:cluster_memory_utilisation:ratio|:node_memory_swap_io_bytes:sum_rate|node:node_memory_utilisation:|node:node_memory_utilisation_2:|node:node_memory_swap_io_bytes:sum_rate|:node_disk_utilisation:avg_irate|node:node_disk_utilisation:avg_irate|:node_disk_saturation:avg_irate|node:node_disk_saturation:avg_irate|node:node_filesystem_usage:|node:node_filesystem_avail:|:node_net_utilisation:sum_irate|node:node_net_utilisation:sum_irate|:node_net_saturation:sum_irate|node:node_net_saturation:sum_irate|node:node_inodes_total:|node:node_inodes_free:'
              sourceLabels: [__name__]
        ## health
        ## fluentbit_input_bytes_total
        ## fluentbit_input_files_closed_total
        ## fluentbit_input_files_opened_total
        ## fluentbit_input_files_rotated_total
        ## fluentbit_input_records_total
        ## fluentbit_output_errors_total
        ## fluentbit_output_proc_bytes_total
        ## fluentbit_output_proc_records_total
        ## fluentbit_output_retries_failed_total
        ## fluentbit_output_retries_total
        ## fluentd_output_status_buffer_available_space_ratio
        ## fluentd_output_status_buffer_queue_length
        ## fluentd_output_status_buffer_stage_byte_size
        ## fluentd_output_status_buffer_stage_length
        ## fluentd_output_status_buffer_total_bytes
        ## fluentd_output_status_emit_count
        ## fluentd_output_status_emit_records
        ## fluentd_output_status_flush_time_count
        ## fluentd_output_status_num_errors
        ## fluentd_output_status_queue_byte_size
        ## fluentd_output_status_retry_count
        ## fluentd_output_status_retry_wait
        ## fluentd_output_status_rollback_count
        ## fluentd_output_status_slow_flush_count
        ## fluentd_output_status_write_count
        ## prometheus_remote_storage_dropped_samples_total
        ## prometheus_remote_storage_enqueue_retries_total
        ## prometheus_remote_storage_failed_samples_total
        ## prometheus_remote_storage_highest_timestamp_in_seconds
        ## prometheus_remote_storage_pending_samples
        ## prometheus_remote_storage_queue_highest_sent_timestamp_seconds
        ## prometheus_remote_storage_retried_samples_total
        ## prometheus_remote_storage_samples_in_total
        ## prometheus_remote_storage_sent_batch_duration_seconds_bucket
        ## prometheus_remote_storage_sent_batch_duration_seconds_count
        ## prometheus_remote_storage_sent_batch_duration_seconds_sum
        ## prometheus_remote_storage_shard_capacity
        ## prometheus_remote_storage_shards
        ## prometheus_remote_storage_shards_desired
        ## prometheus_remote_storage_shards_max
        ## prometheus_remote_storage_shards_min
        ## prometheus_remote_storage_string_interner_zero_reference_releases_total
        ## prometheus_remote_storage_succeeded_samples_total
        ## up
        - url: http://$(FLUENTD_METRICS_SVC).$(NAMESPACE).svc.cluster.local:9888/prometheus.metrics
          remoteTimeout: 5s
          writeRelabelConfigs:
            - action: keep
              regex: (?:up|prometheus_remote_storage_.*|fluentd_.*|fluentbit.*)
              sourceLabels: [__name__]
        ## control plane metrics
        ## coredns:
        ## coredns_cache_size
        ## coredns_cache_entries
        ## coredns_cache_hits_total
        ## coredns_cache_misses_total
        ## coredns_dns_request_duration_seconds_count
        ## coredns_dns_request_duration_seconds_sum
        ## coredns_dns_request_count_total
        ## coredns_dns_requests_total
        ## coredns_dns_response_rcode_count_total
        ## coredns_dns_responses_total
        ## coredns_forward_request_count_total
        ## coredns_forward_requests_total
        ## process_cpu_seconds_total
        ## process_open_fds
        ## process_resident_memory_bytes
        - url: http://$(FLUENTD_METRICS_SVC).$(NAMESPACE).svc.cluster.local:9888/prometheus.metrics.control-plane.coredns
          remoteTimeout: 5s
          writeRelabelConfigs:
            - action: keep
              regex: coredns;(?:coredns_cache_(size|entries|(hits|misses)_total)|coredns_dns_request_duration_seconds_(count|sum)|coredns_(dns_request|dns_response_rcode|forward_request)_count_total|coredns_(forward_requests|dns_requests|dns_responses)_total|process_(cpu_seconds_total|open_fds|resident_memory_bytes))
              sourceLabels: [job, __name__]
        ## etcd server:
        ## etcd_debugging_mvcc_db_total_size_in_bytes
        ## etcd_debugging_store_expires_total
        ## etcd_debugging_store_watchers
        ## etcd_disk_backend_commit_duration_seconds_bucket
        ## etcd_disk_wal_fsync_duration_seconds_bucket
        ## etcd_grpc_proxy_cache_hits_total
        ## etcd_grpc_proxy_cache_misses_total
        ## etcd_network_client_grpc_received_bytes_total
        ## etcd_network_client_grpc_sent_bytes_total
        ## etcd_server_has_leader
        ## etcd_server_leader_changes_seen_total
        ## etcd_server_proposals_applied_total
        ## etcd_server_proposals_committed_total
        ## etcd_server_proposals_failed_total
        ## etcd_server_proposals_pending
        ## process_cpu_seconds_total
        ## process_open_fds
        ## process_resident_memory_bytes
        - url: http://$(FLUENTD_METRICS_SVC).$(NAMESPACE).svc.cluster.local:9888/prometheus.metrics.control-plane.kube-etcd
          remoteTimeout: 5s
          writeRelabelConfigs:
            - action: keep
              regex: kube-etcd;(?:etcd_debugging_(mvcc_db_total_size_in_bytes|store_(expires_total|watchers))|etcd_disk_(backend_commit|wal_fsync)_duration_seconds_bucket|etcd_grpc_proxy_cache_(hits|misses)_total|etcd_network_client_grpc_(received|sent)_bytes_total|etcd_server_(has_leader|leader_changes_seen_total)|etcd_server_proposals_(pending|(applied|committed|failed)_total)|process_(cpu_seconds_total|open_fds|resident_memory_bytes))
              sourceLabels: [job, __name__]
